<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-02-04T08:34:04+13:00</updated><id>http://localhost:4000//</id><title type="html">Kieran’s take</title><subtitle>This is the description
</subtitle><entry><title type="html">Magic Mirror</title><link href="http://localhost:4000/projects/magicmirror" rel="alternate" type="text/html" title="Magic Mirror" /><published>2017-01-22T14:33:03+13:00</published><updated>2017-01-22T14:33:03+13:00</updated><id>http://localhost:4000/projects/magic-mirror</id><content type="html" xml:base="http://localhost:4000/projects/magicmirror">&lt;p&gt;The magic mirror it is a device for self-reflection. As you give yourself your morning prep talk, the magic mirror briefs you on your day — upcoming events on your calendar, the weather forecast, and a motivational quote.&lt;/p&gt;

&lt;p&gt;This was one of the first builds I had seen that I had wished I had come up with myself. There are quite a few builds online but the code I used was from &lt;a href=&quot;http://michaelteeuw.nl/tagged/magicmirror&quot; class=&quot;link&quot;&gt;Michael Teeuw’s&lt;/a&gt; build.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Build details
&lt;/div&gt;

&lt;p&gt;In short, an LED monitor hides behind the one-way mirror and is connected to a Raspberry Pi. The computer is running a Apache server, which has access to your calendar to show upcoming events, an open source weather website for the forecast, and a list of motivational quotes. The details can be found at the link above. The modifications I made were adding the quotes at the bottom of the display and a PIR sensor to turn off the mirror when no one is in the room.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Lessons
&lt;/div&gt;

&lt;p&gt;I learnt how to set up a Raspberry Pi to run as a kiosk, some few timber manipulation techniques and how valuable it is to know people who own tools.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Improvements
&lt;/div&gt;

&lt;p&gt;I would have ideally made the mirror a bit thinner but this was difficult due to budget constraints. It would also be nice to have a display where the black pixels are completely off. As far as I know, this is only possible with an OLED display, which is also a pricey solution. Alternatively, a few, smaller displays could be used in only the regions which display things.&lt;/p&gt;</content><summary type="html">The magic mirror it is a device for self-reflection. As you give yourself your morning prep talk, the magic mirror briefs you on your day — upcoming events on your calendar, the weather forecast, and a motivational quote.</summary></entry><entry><title type="html">GrabOne Scraper</title><link href="http://localhost:4000/projects/scraper" rel="alternate" type="text/html" title="GrabOne Scraper" /><published>2017-01-22T14:33:03+13:00</published><updated>2017-01-22T14:33:03+13:00</updated><id>http://localhost:4000/projects/daily-deal-scraper</id><content type="html" xml:base="http://localhost:4000/projects/scraper">&lt;p&gt;I often visit daily deal websites, looking for the same thing from week to week. I wanted to be able to be notified of relevant deals easily, but without getting spammed on a mailing list. I figured this was a good chance to learn a bit of web dev and scraping, useful skills for future projects I had in mind.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	User guide
&lt;/div&gt;

&lt;p&gt;The GrabOne scraper is a taskbar application which allows you to quickly filter the current deals on &lt;a href=&quot;http://grabone.co.nz&quot; class=&quot;link&quot;&gt;GrabOne&lt;/a&gt;. You specify two criteria in the Filter tab: the minimum number of purchases of the deal and a list of keywords. The filter operator is also specified as AND or OR (a toggle button) to specify if the deals need to match both or either of the two criteria. The Deals tab shows the details of each item.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Build details
&lt;/div&gt;

&lt;p&gt;The scraper is an Electron application using node.js and is therefore cross-platform. The code can be found at my &lt;a href=&quot;https://github.com/kbre93&quot; class=&quot;link&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">I often visit daily deal websites, looking for the same thing from week to week. I wanted to be able to be notified of relevant deals easily, but without getting spammed on a mailing list. I figured this was a good chance to learn a bit of web dev and scraping, useful skills for future projects I had in mind.</summary></entry><entry><title type="html">Aqualarm</title><link href="http://localhost:4000/projects/aqualarm" rel="alternate" type="text/html" title="Aqualarm" /><published>2017-01-22T14:33:03+13:00</published><updated>2017-01-22T14:33:03+13:00</updated><id>http://localhost:4000/projects/aqualarm</id><content type="html" xml:base="http://localhost:4000/projects/aqualarm">&lt;p&gt;In my quest to improve my morning ritual, I discovered two truths: 1) Waking up is hard and 2) being dehydrated is not a good start to the day. That is why I created the Aqualarm, an alarm clock which requires you to drink a glass of water to turn it off.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	User manual
&lt;/div&gt;

&lt;p&gt;When first used, place your choice of drinking vessel (empty) on the scale and tare it. Before going to bed, fill up your vessel with with water, set the timer, and press start. When the alarm goes off in the morning, drink the water and return the empty glass to the platform to silence the alarm. Attempt to continue snoozing but fail and instead have a great, hydrated start to your day.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Build details
&lt;/div&gt;

&lt;p&gt;The load cell used for weighing the glass was taken from a cheap kitchen scale, and is connected to a &lt;a href=&quot;https://www.sparkfun.com/products/13879&quot; class=&quot;link&quot;&gt;HX711&lt;/a&gt; load cell amp from SparkFun. The ATmega328 microcontroller (i.e an Arduino Uno) records the weight, sets the time, and drives the 7-segment, LED display and piezo buzzer. In short, the code is organised as finite state machine (tare - setting time - counting down - sounding alarm), the &lt;a href=&quot;https://github.com/bogde/HX711&quot; class=&quot;link&quot;&gt;HX711 library&lt;/a&gt; is used for reading the scale weight, existing &lt;a href=&quot;http://playground.arduino.cc/Main/CountDownTimer&quot; class=&quot;link&quot;&gt;countdown timer code&lt;/a&gt; was used for the timer and a custom LED display driver was written. I designed the circuit board in Altium and routed it using a LPFK board router. The case was laser-cut from from acrylic. The code and drawings/designs are available on my &lt;a href=&quot;https://github.com/kbre93&quot; class=&quot;link&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;description&quot; id=&quot;post_sub_heading&quot;&gt; 
	Lessons
&lt;/div&gt;

&lt;p&gt;I finally got to use the PCB router in my lab and brush up on my Altium skills. This was also my first proper microcontroller project so I learnt a lot of programming and setup.&lt;/p&gt;</content><summary type="html">In my quest to improve my morning ritual, I discovered two truths: 1) Waking up is hard and 2) being dehydrated is not a good start to the day. That is why I created the Aqualarm, an alarm clock which requires you to drink a glass of water to turn it off.</summary></entry></feed>
